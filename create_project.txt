1. Установка Poetry - "pip install poetry"
2. Создание структуры проекта:
2.1. Инициализация проекта - "poetry new nginx-log-analyzer" и "cd nginx-log-analyzer"
2.2. Дополнительные папки и файлы:
2.2.1. Папка "logs" - "mkdir logs"
2.2.2. CLI - "touch nginx_log_analyzer/cli.py" ("echo > nginx_log_analyzer/cli.py" под win)
2.2.3. файл для парсера - "touch nginx_log_analyzer/parser.py"
2.2.4. файл для анализатора - "touch nginx_log_analyzer/analyzer.py"
2.2.5. файл для статистики - "touch nginx_log_analyzer/stats.py"
2.2.6. файл .gitignore - "touch .gitignore"
Добавить в него стандартные исключения для Python:
__pycache__/
*.pyc
*.pyo
*.pyd
.Python
env/
venv/
.venv/
.mypy_cache/
.pytest_cache/
.coverage
htmlcov/
dist/
build/
*.egg-info/
.DS_Store

2.2.8. файл .env для переменных окружения - "touch .env"
2.2.9. файл Dockerfile - "touch Dockerfile"
2.2.10. файл Makefile - "touch Makefile"
2.2.11. Создать папку для CI/CD (GitHub Actions) - "mkdir -p .github/workflows
touch .github/workflows/ci.yml"

3.Работа с ГИТ:
git init
git add .
git commit -m "Initial commit"
git remote add origin  https://github.com/LovetcSlov/nginx-log-analyzer.git
git remote -v
        origin  https://github.com/LovetcSlov/my_project.git (fetch)
        origin  https://github.com/LovetcSlov/my_project.git (push)
git push -u origin master

4. Настройка pre-commit хуков
4.1. Установка pre-commit - "poetry add --dev pre-commit"
4.2. файл .pre-commit-config.yaml - touch .pre-commit-config.yaml
4.3. конфигурацию для black и flake8 -
 repos:
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
  - repo: https://gitlab.com/pycqa/flake8
    rev: 4.0.0
    hooks:
      - id: flake8

4.4. Хуки - "poetry run pre-commit install"